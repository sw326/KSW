-- 트리거 생성
CREATE OR REPLACE TRIGGER TRG_AGE_RATING_ID
BEFORE INSERT ON AGE_RATINGS
FOR EACH ROW
BEGIN
    SELECT SEQ_AGE_RATING_ID.NEXTVAL INTO :NEW.AGE_RATING_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_CATEGORY_ID
BEFORE INSERT ON CATEGORIES
FOR EACH ROW
BEGIN
    SELECT SEQ_CATEGORY_ID.NEXTVAL INTO :NEW.CATEGORY_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_BOOK_ID
BEFORE INSERT ON BOOKS
FOR EACH ROW
BEGIN
    SELECT SEQ_BOOK_ID.NEXTVAL INTO :NEW.BOOK_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_MEMBER_ID
BEFORE INSERT ON MEMBER
FOR EACH ROW
BEGIN
    SELECT SEQ_MEMBER_ID.NEXTVAL INTO :NEW.MEMBER_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_CHILD_ID
BEFORE INSERT ON CHILDREN
FOR EACH ROW
BEGIN
    SELECT SEQ_CHILD_ID.NEXTVAL INTO :NEW.CHILD_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_ADDRESS_ID
BEFORE INSERT ON ADDRESSES
FOR EACH ROW
BEGIN
    SELECT SEQ_ADDRESS_ID.NEXTVAL INTO :NEW.ADDRESS_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_DELIVERY_ADDRESS_ID
BEFORE INSERT ON DELIVERY_ADDRESSES
FOR EACH ROW
BEGIN
    SELECT SEQ_DELIVERY_ADDRESS_ID.NEXTVAL INTO :NEW.DELIVERY_ADDRESS_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_ORDER_ID
BEFORE INSERT ON ORDERS
FOR EACH ROW
BEGIN
    SELECT SEQ_ORDER_ID.NEXTVAL INTO :NEW.ORDER_ID FROM DUAL;
END;
/

CREATE OR REPLACE TRIGGER TRG_PAYMENT_ID
BEFORE INSERT ON PAYMENT_METHODS
FOR EACH ROW
BEGIN
    SELECT SEQ_PAYMENT_ID.NEXTVAL INTO :NEW.PAYMENT_ID FROM DUAL;
END;
/

-- 회원 탈퇴시 자녀정보 삭제 트리거
CREATE OR REPLACE TRIGGER TRG_DELETE_MEMBER
BEFORE DELETE ON MEMBER
FOR EACH ROW
BEGIN
    DELETE FROM CHILDREN WHERE MEMBER_ID = :OLD.MEMBER_ID;
    DELETE FROM ADDRESSES WHERE MEMBER_ID = :OLD.MEMBER_ID;
    DELETE FROM DELIVERY_ADDRESSES WHERE MEMBER_ID = :OLD.MEMBER_ID;
    DELETE FROM CART_ITEMS WHERE MEMBER_ID = :OLD.MEMBER_ID;
    DELETE FROM MEMBER_TYPE WHERE MEMBER_ID = :OLD.MEMBER_ID;
END;
/

-- 장바구니 도서정보 동기화 트리거
CREATE OR REPLACE TRIGGER TRG_SYNC_CART_ITEMS
BEFORE INSERT OR UPDATE ON CART_ITEMS
FOR EACH ROW
DECLARE
    V_BOOK_NAME VARCHAR2(30);
    V_SALE_PRICE NUMBER;
BEGIN
    SELECT BOOK_NAME, SALE_PRICE 
    INTO V_BOOK_NAME, V_SALE_PRICE
    FROM BOOKS 
    WHERE BOOK_ID = :NEW.BOOK_ID;
    
    :NEW.BOOK_NAME := V_BOOK_NAME;
    :NEW.PRICE := V_SALE_PRICE;
END;
/